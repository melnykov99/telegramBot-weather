"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.weatherService = void 0;
const apiRequestClient_1 = require("./apiRequestClient");
const utils_1 = require("./utils");
const constants_1 = require("./constants");
const db_1 = require("./db");
exports.weatherService = {
    forecastTogether(chatId) {
        return __awaiter(this, void 0, void 0, function* () {
            const city = yield db_1.usersRepository.foundCityByUserChatId(chatId);
            if (city === constants_1.DB_RESULT.NOT_FOUND) {
                return '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–≥–æ–¥—ã! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ò–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥".';
            }
            if (city === constants_1.DB_RESULT.UNKNOWN_ERROR) {
                return '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–≥–æ–¥—ã! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
            }
            const togetherDate = new Date().toISOString().split('T')[0];
            const togetherDateRuFormat = (0, utils_1.changeDateRuFormat)(togetherDate);
            const response = yield apiRequestClient_1.apiRequestClient.forecastDate(city, togetherDate);
            if (response === constants_1.API_RESULT.UNKNOWN_ERROR) {
                return '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–≥–æ–¥—ã! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
            }
            const maxTemp = response.data.forecast.forecastday[0].day.maxtemp_c;
            const minTemp = response.data.forecast.forecastday[0].day.mintemp_c;
            const avgWind = response.data.forecast.forecastday[0].day.avgvis_km;
            const rainChance = response.data.forecast.forecastday[0].day.daily_chance_of_rain;
            const snowChance = response.data.forecast.forecastday[0].day.daily_chance_of_snow;
            const conditionIcon = (0, utils_1.handlerConditionCode)(response.data.forecast.forecastday[0].day.condition.code);
            const avgCondition = `${response.data.forecast.forecastday[0].day.condition.text.toLowerCase()} ${conditionIcon}`;
            return `–ü–æ–≥–æ–¥–∞ <b>${togetherDateRuFormat}</b> –≤ –≥–æ—Ä–æ–¥–µ <b>${city}</b> üåá\n–ë–æ–ª—å—à—É—é —á–∞—Å—Ç—å –¥–Ω—è –±—É–¥–µ—Ç <b>${avgCondition}</b>\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: –æ—Ç <b>${minTemp}‚ÑÉ</b> ‚¨áÔ∏è –¥–æ <b>${maxTemp}‚ÑÉ</b> ‚¨ÜÔ∏è\n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: <b>${avgWind} –º/—Å</b> üå¨\n–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –¥–æ–∂–¥—è: <b>${rainChance}%</b> üåß\n–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–Ω–µ–≥–∞: <b>${snowChance}%</b> ‚ùÑÔ∏è`;
        });
    },
    forecastTomorrow() {
        return __awaiter(this, void 0, void 0, function* () {
        });
    },
    forecastThreeDays() {
        return __awaiter(this, void 0, void 0, function* () {
        });
    },
    forecastSevenDays() {
        return __awaiter(this, void 0, void 0, function* () {
        });
    }
};
