import {apiRequestClient} from "./apiRequestClient";
import {changeDateRuFormat, handlerConditionCode} from "./utils";
import {API_RESULT, DB_RESULT} from "./constants";
import {usersRepository} from "./db";

export const weatherService = {
    async forecastTogether(chatId: number) {
        const city = await usersRepository.foundCityByUserChatId(chatId)
        if (city === DB_RESULT.NOT_FOUND) {
            return '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–≥–æ–¥—ã! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ò–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥".'
        }
        if (city === DB_RESULT.UNKNOWN_ERROR) {
            return '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–≥–æ–¥—ã! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
        }
        const togetherDate: string = new Date().toISOString().split('T')[0]
        const togetherDateRuFormat = changeDateRuFormat(togetherDate)
        const response = await apiRequestClient.forecastDate(city, togetherDate)
        if (response === API_RESULT.UNKNOWN_ERROR) {
            return '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–≥–æ–¥—ã! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
        }
        const maxTemp = response.data.forecast.forecastday[0].day.maxtemp_c
        const minTemp = response.data.forecast.forecastday[0].day.mintemp_c
        const avgWind = response.data.forecast.forecastday[0].day.avgvis_km
        const rainChance = response.data.forecast.forecastday[0].day.daily_chance_of_rain
        const snowChance = response.data.forecast.forecastday[0].day.daily_chance_of_snow
        const conditionIcon: string = handlerConditionCode(response.data.forecast.forecastday[0].day.condition.code)
        const avgCondition = `${response.data.forecast.forecastday[0].day.condition.text.toLowerCase()} ${conditionIcon}`
        return `–ü–æ–≥–æ–¥–∞ <b>${togetherDateRuFormat}</b> –≤ –≥–æ—Ä–æ–¥–µ <b>${city}</b> üåá\n–ë–æ–ª—å—à—É—é —á–∞—Å—Ç—å –¥–Ω—è –±—É–¥–µ—Ç <b>${avgCondition}</b>\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: –æ—Ç <b>${minTemp}‚ÑÉ</b> ‚¨áÔ∏è –¥–æ <b>${maxTemp}‚ÑÉ</b> ‚¨ÜÔ∏è\n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: <b>${avgWind} –º/—Å</b> üå¨\n–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –¥–æ–∂–¥—è: <b>${rainChance}%</b> üåß\n–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–Ω–µ–≥–∞: <b>${snowChance}%</b> ‚ùÑÔ∏è`
    },
    async forecastTomorrow() {

    },
    async forecastThreeDays() {

    },
    async forecastSevenDays() {

    }
}